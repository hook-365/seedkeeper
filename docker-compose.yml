# Seedkeeper Redis Architecture - The Garden Cafe Discord Bot
# Portainer Stack Configuration
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: seedkeeper-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme123}
    healthcheck:
      test: redis-cli -a "$$REDIS_PASSWORD" ping
      interval: 30s
      timeout: 5s
      retries: 3
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  gateway:
    image: seedkeeper:latest
    container_name: seedkeeper-gateway
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme123}
      - PYTHONUNBUFFERED=1
    command: ["gateway"]
    mem_limit: 256m
    mem_reservation: 128m
    cpus: 0.5
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "homepage.group=AI Services"
      - "homepage.name=Seedkeeper Gateway"
      - "homepage.icon=discord.png"
      - "homepage.description=Discord bot gateway component"
      - "com.centurylinklabs.watchtower.enable=false"

  worker:
    image: seedkeeper:latest
    container_name: seedkeeper-worker
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      redis:
        condition: service_healthy
      gateway:
        condition: service_started
    volumes:
      - /storage/docker/seedkeeper/data:/app/data
      - /storage/docker/seedkeeper/views:/app/views
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme123}
      - PYTHONUNBUFFERED=1
    command: ["worker"]
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 0.5
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_RAW
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    labels:
      - "homepage.group=AI Services"
      - "homepage.name=Seedkeeper Worker"
      - "homepage.icon=bot.png" 
      - "homepage.description=Command processing worker with hot-reload"
      - "com.centurylinklabs.watchtower.enable=false"

volumes:
  redis-data:

networks:
  default:
    external: true
    name: seg_iot